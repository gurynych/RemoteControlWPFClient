<UserControl x:Class="RemoteControlWPFClient.WpfLayer.Views.UserControls.Device.DeviceFolderUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:RemoteControlWPFClient.WpfLayer.Views.UserControls.Device"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:vm="clr-namespace:RemoteControlWPFClient.WpfLayer.ViewModels"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:RemoteControlWPFClient.WpfLayer.Converters"
             mc:Ignorable="d"
             d:DesignHeight="400" d:DesignWidth="600"
             d:DataContext="{d:DesignInstance vm:DeviceFolderViewModel, IsDesignTimeCreatable=False}">
    <UserControl.Resources>
        <converters:LongStringConverter x:Key="LongStringConverter" />
        <converters:PreviousInCollectionConverter x:Key="PreviousInCollectionConverter" />
        <converters:LastInCollectionConverter x:Key="LastInCollectionConverter" />
        <converters:CollectionLengthGreaterThenConverter x:Key="CollectionLengthGreaterThenConverter" />
        <converters:CollectionToPathConverter x:Key="CollectionToPathConverter" />
        <converters:BytesToReadStringConverter x:Key="BytesToReadStringConverter" />

        <Style TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary}" />
            <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Secondary.Dark}" />
            <Setter Property="Height" Value="10" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Border.CornerRadius" Value="4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Border CornerRadius="{TemplateBinding Border.CornerRadius}"
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <Rectangle Name="PART_Track" />
                                <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left">
                                    <Border Background="{TemplateBinding Foreground}"
                                            CornerRadius="{TemplateBinding Border.CornerRadius}" />
                                </Decorator>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadRootDirectoryCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5*" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>

            <Button Style="{StaticResource MaterialDesignIconButton}"
                    Focusable="False"
                    ToolTip="На главную"
                    Grid.Column="0"
                    Margin="5 0"
                    Command="{Binding LoadRootDirectoryCommand, IsAsync=True}">
                <md:PackIcon Kind="FolderHomeOutline"
                             Focusable="False"
                             Width="24"
                             Height="24" />
            </Button>

            <Button Style="{StaticResource MaterialDesignIconButton}"
                    Focusable="False"
                    IsEnabled="{Binding OpenedDirectoryHistory, Converter={StaticResource CollectionLengthGreaterThenConverter}, ConverterParameter=1}"
                    Grid.Column="1"
                    Margin="5 0"
                    Command="{Binding OpenPreviousDirectoryCommand, IsAsync=True}">
                <Button.ToolTip>
                    <TextBlock
                        Text="{Binding OpenedDirectoryHistory, StringFormat='{}Назад на &quot;{0}&quot;', Converter={StaticResource PreviousInCollectionConverter}}" />
                </Button.ToolTip>
                <md:PackIcon Kind="ArrowLeft"
                             Focusable="False"
                             Width="24"
                             Height="24" />
            </Button>

            <Button Style="{StaticResource MaterialDesignIconButton}"
                    Focusable="False"
                    Margin="5 0"
                    Command="{Binding RefreshDirectoryCommand, IsAsync=True}"
                    Grid.Column="2">
                <Button.ToolTip>
                    <TextBlock
                        Text="{Binding OpenedDirectoryHistory, Converter={StaticResource LastInCollectionConverter}, StringFormat='{}Обновить &quot;{0}&quot;'}" />
                </Button.ToolTip>
                <md:PackIcon Kind="Refresh"
                             Focusable="False"
                             Width="24"
                             Height="24" />
            </Button>

            <TextBox Text="{Binding FullPath, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                     Style="{StaticResource MaterialDesignOutlinedTextBox}"
                     md:HintAssist.IsFloating="False"
                     FontSize="16"
                     Foreground="{DynamicResource MaterialDesign.Brush.Primary.Light}"
                     VerticalContentAlignment="Center"
                     VerticalAlignment="Center"
                     Margin="5 0"
                     BorderThickness="1"
                     BorderBrush="{DynamicResource MaterialDesign.Brush.Primary}"
                     md:TextFieldAssist.TextFieldCornerRadius="3"
                     Grid.Column="3">
                <TextBox.InputBindings>
                    <KeyBinding Command="{Binding OpenByUserPathDirectoryCommand, IsAsync=True}" Key="Enter" />
                </TextBox.InputBindings>
            </TextBox>

            <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                     Style="{StaticResource MaterialDesignOutlinedTextBox}"
                     md:HintAssist.IsFloating="False"
                     FontSize="16"
                     Foreground="{DynamicResource MaterialDesign.Brush.Primary.Light}"
                     VerticalContentAlignment="Center"
                     VerticalAlignment="Center"
                     Margin="5 0 2 0"
                     BorderThickness="1"
                     BorderBrush="{DynamicResource MaterialDesign.Brush.Primary}"
                     md:TextFieldAssist.TextFieldCornerRadius="3"
                     Grid.Column="4">
                <md:HintAssist.Hint>
                    <TextBlock
                        Text="{Binding OpenedDirectoryHistory, Converter={StaticResource LastInCollectionConverter}, StringFormat='{}Поиск в {0}'}" />
                </md:HintAssist.Hint>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding SearchInFilesCommand, IsAsync=True}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </Grid>

        <DataGrid ItemsSource="{Binding FileInfoList}"
                  AutoGenerateColumns="False"
                  HorizontalAlignment="Stretch"
                  IsReadOnly="True"
                  Focusable="False"
                  Margin="0 10 0 5"
                  Grid.Row="1"
                  HorizontalScrollBarVisibility="Auto">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding OpenDriveOrDirectoryCommand}"
                                           CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Focusable"
                            Value="False" />
                    <Style.Triggers>
                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                            <Setter Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="Transparent" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource MaterialDesign.Brush.Primary}" />
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="Transparent" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Тип"
                                        CanUserResize="False"
                                        CanUserSort="True"
                                        SortMemberPath="FileType">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <md:PackIcon Kind="{Binding FileTypeIcon}"
                                         Height="24"
                                         Width="24"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center">
                                <md:PackIcon.Style>
                                    <Style TargetType="{x:Type md:PackIcon}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding FileType}"
                                                         Value="Drive">
                                                <Setter Property="ToolTip"
                                                        Value="Диск" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FileType}"
                                                         Value="File">
                                                <Setter Property="ToolTip"
                                                        Value="Файл" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FileType}"
                                                         Value="Directory">
                                                <Setter Property="ToolTip"
                                                        Value="Папка" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </md:PackIcon.Style>
                            </md:PackIcon>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Имя"
                                        CanUserSort="True"
                                        SortMemberPath="Name">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Text="{Binding Name, Converter={StaticResource LongStringConverter}, ConverterParameter=40}"
                                VerticalAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Дата изменения"
                                        CanUserSort="True"
                                        SortMemberPath="ChangingDate">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ChangingDate, StringFormat='{}{0:dd.MM.yyyy HH:mm}'}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Размер"
                                        CanUserSort="True"
                                        SortMemberPath="FileLength">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Text="{Binding FileLength, Converter={StaticResource BytesToReadStringConverter}}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Скачать"
                                        CanUserResize="False"
                                        CanUserSort="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Focusable="False"
                                    Command="{Binding DataContext.DownloadItemComamnd, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                    CommandParameter="{Binding}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}"
                                           BasedOn="{StaticResource MaterialDesignIconButton}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding FileType}"
                                                         Value="Drive">
                                                <Setter Property="Visibility"
                                                        Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FileType}"
                                                         Value="File">
                                                <Setter Property="ToolTip"
                                                        Value="Скачать файл" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FileType}"
                                                         Value="Directory">
                                                <Setter Property="ToolTip"
                                                        Value="Скачать архив" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <md:PackIcon
                                    Height="24"
                                    Width="24"
                                    Focusable="False">
                                    <md:PackIcon.Style>
                                        <Style TargetType="{x:Type md:PackIcon}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding FileType}"
                                                             Value="File">
                                                    <Setter Property="Kind"
                                                            Value="FileDownloadOutline" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding FileType}"
                                                             Value="Directory">
                                                    <Setter Property="Kind"
                                                            Value="FolderDownloadOutline" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </md:PackIcon.Style>
                                </md:PackIcon>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Действие"
                                        CanUserResize="False"
                                        CanUserSort="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Focusable="False"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}"
                                           BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding FileType}"
                                                         Value="File">
                                                <Setter Property="Content"
                                                        Value="Подробнее" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FileType}"
                                                         Value="Directory">
                                                <Setter Property="Content"
                                                        Value="Открыть" />
                                                <Setter Property="Command"
                                                        Value="{Binding DataContext.OpenDriveOrDirectoryCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, IsAsync=True}" />
                                                <Setter Property="CommandParameter"
                                                        Value="{Binding}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FileType}"
                                                         Value="Drive">
                                                <Setter Property="Content"
                                                        Value="Открыть" />
                                                <Setter Property="Command"
                                                        Value="{Binding DataContext.OpenDriveOrDirectoryCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, IsAsync=True}" />
                                                <Setter Property="CommandParameter"
                                                        Value="{Binding}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>


        <ProgressBar IsIndeterminate="True"
                     Value="0"
                     BorderThickness="4"
                     Height="100"
                     Width="100"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Grid.Row="1">
            <ProgressBar.Style>
                <Style TargetType="{x:Type ProgressBar}"
                       BasedOn="{StaticResource MaterialDesignCircularProgressBar}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLoad}"
                                     Value="True">
                            <Setter Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLoad}"
                                     Value="False">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ProgressBar.Style>
        </ProgressBar>
        
        <md:Card Grid.Row="1" 
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center"
                 Padding="10"
                 FontSize="14">
            <StackPanel Orientation="Vertical">
                <TextBlock Text="{Binding DownloadableFileName, StringFormat='{}Загрузка файла {0}'}"
                           HorizontalAlignment="Center"
                           Margin="0 0 0 10"
                           TextWrapping="Wrap"
                           FontSize="16"/>
                <TextBlock Text="{Binding PercentDownloaded, StringFormat='{}Загружено: {0}%'}" 
                           Margin="0 0 0 5"
                           TextWrapping="Wrap"/>
                <ProgressBar Maximum="100"
                             Width="250"
                             Value="{Binding PercentDownloaded}"
                             Margin="0 0 0 5"/>
                <TextBlock TextWrapping="Wrap">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="Загружено {0} из {1}">
                            <Binding Path="DownloadableBytesAmount"
                                     Converter="{StaticResource BytesToReadStringConverter}"/>
                            <Binding Path="TotalBytesAmount" 
                                     Converter="{StaticResource BytesToReadStringConverter}"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </StackPanel>
            <md:Card.Style>
                <Style TargetType="{x:Type md:Card}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsDownload}"
                                     Value="True">
                            <Setter Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsDownload}"
                                     Value="False">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </md:Card.Style>
        </md:Card>

        <Grid Grid.Row="2">
            <TextBlock Text="{Binding TotalFilesAmount, StringFormat='{}Всего элементов: {0}'}"
                       HorizontalAlignment="Right"
                       FontSize="14"
                       Margin="5 0" />
        </Grid>
    </Grid>
</UserControl>